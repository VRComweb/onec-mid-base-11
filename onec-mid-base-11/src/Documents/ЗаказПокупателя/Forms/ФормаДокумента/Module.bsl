
#Область КрутилевВВ

&НаСервере
Процедура КВВ_ДобавлениеПоляФормы_КонтактноеЛицо()
	// {{ Крутилев В.В

	// добавление ПоляФормы(КонтактноеЛицо)
	Если Элементы.Найти("КонтактноеЛицо") = Неопределено Тогда
		ЭлементКонтактноеЛицо = Элементы.Добавить("КонтактноеЛицо", Тип("ПолеФормы"), Элементы.ГруппаШапкаПраво);
		ЭлементКонтактноеЛицо.Вид = ВидПоляФормы.ПолеВвода;
		ЭлементКонтактноеЛицо.ПутьКДанным = "Объект.КВВ_КонтактноеЛицо";
	КонецЕсли;

	// }} Крутилев В.В
КонецПроцедуры


&НаСервере
Процедура КВВ_ДобавлениеПоляФормы_СогласованнаяСкидка()
	// {{ Крутилев В.В
	
	// добавление ПоляФормы(СогласованнаяСкидка)
	Если Элементы.Найти("СогласованнаяСкидка") = Неопределено Тогда
		ЭлементСогласованнаяСкидка = Элементы.Вставить("СогласованнаяСкидка", Тип("ПолеФормы"), ЭтаФорма, Элементы.Страницы);
		ЭлементСогласованнаяСкидка.Вид = ВидПоляФормы.ПолеВвода;
		ЭлементСогласованнаяСкидка.ПутьКДанным = "Объект.КВВ_СогласованнаяСкидка";
		ЭлементСогласованнаяСкидка.УстановитьДействие("ПриИзменении","КВВ_СогласованнаяСкидкаПриИзменении");
	КонецЕсли;

	// }} Крутилев В.В
КонецПроцедуры


&НаСервере
Процедура КВВ_ДобавлениеКнопкиКоманды_ПересчитатьСУчетомСкидки()
	// {{ Крутилев В.В
	
	// добавление Клманды_Кнопки(ПересчитатьСУчетомСкидкиВсе)
	Если Элементы.Найти("ПересчитатьСУчетомСкидки") = Неопределено Тогда
		Команды_ПересчитатьСУчетомСкидки = Команды.Добавить("ПересчитатьСУчетомСкидки");
		Команды_ПересчитатьСУчетомСкидки.Заголовок = "Пересчитать с учетом скидки";
		Команды_ПересчитатьСУчетомСкидки.Действие = "КВВ_Команда_ПересчитатьСУчетомСкидкиВсе";
		
		Элемент_ПересчитатьСУчетомСкидки = Элементы.Вставить("ПересчитатьСУчетомСкидки", Тип("КнопкаФормы"), ЭтаФорма, Элементы.Страницы);
		Элемент_ПересчитатьСУчетомСкидки.ИмяКоманды = "ПересчитатьСУчетомСкидки";
		Элемент_ПересчитатьСУчетомСкидки.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
	КонецЕсли;

	// }} Крутилев В.В
КонецПроцедуры


&НаКлиенте
Процедура КВВ_Команда_ПересчитатьСУчетомСкидкиВсе(Команда)
	// {{ Крутилев В.В
	
	// добавление Процедура_Кнопки(ПересчитатьСУчетомСкидкиВсе)
	
	КВВ_ПересчитатьСУчетомСкидкиВсе();

	// }} Крутилев В.В
КонецПроцедуры


&НаКлиенте
Процедура КВВ_ПересчитатьСУчетомСкидкиВсе()
	// {{ Крутилев В.В
	
	// Пересчет по всем строкам ТабЧастей документа
	Для Каждого Строка Из Объект.Товары Цикл
		РассчитатьСуммуСтроки(Строка);
	КонецЦикла;
	Для Каждого Строка Из Объект.Услуги Цикл
		РассчитатьСуммуСтроки(Строка);
	КонецЦикла;

	РассчитатьСуммуДокумента();
	// }} Крутилев В.В
КонецПроцедуры

 
&НаКлиенте
Асинх Процедура КВВ_ЗадатьВопросАсинх()
	// {{ Крутилев В.В
	
	// Задаем вопрос при изменении поля скидки на пересчет всех ТабЧастей документа
	Обещание = ВопросАсинх(НСтр("ru='Пересчитать ВСЕ с учетом скидки ?'"), РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
	Результат = Ждать Обещание; // тут выполнение остановится пока пользователь не ответит на вопрос
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		//текст = НСтр("ru='Ответ утвердительный!'");
		КВВ_ПересчитатьСУчетомСкидкиВсе();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		//текст = НСтр("ru='Ответ отрицательный!'");
	Иначе
		//текст = НСтр("ru='Ответ не получен!'");
	КонецЕсли;
	
	// }} Крутилев В.В
КонецПроцедуры


&НаКлиенте
Процедура КВВ_СогласованнаяСкидкаПриИзменении(Элемент)
	// {{ Крутилев В.В
	
	// При изменении скидки задаем вопрос о пересчете всех ТабЧастей документа
	КВВ_ЗадатьВопросАсинх();
	
	РассчитатьСуммуДокумента();
	// }} Крутилев В.В
КонецПроцедуры

#КонецОбласти






#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	// {{ Крутилев В.В

	// добавление ПоляФормы(КонтактноеЛицо)
	КВВ_ДобавлениеПоляФормы_КонтактноеЛицо();
	// добавление ПоляФормы(СогласованнаяСкидка)
	КВВ_ДобавлениеПоляФормы_СогласованнаяСкидка();
	// добавление Кнопки(ПересчитатьСУчетомСкидки)
	КВВ_ДобавлениеКнопкиКоманды_ПересчитатьСУчетомСкидки();

	// }} Крутилев В.В

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	// {{ Крутилев В.В
	// заменяем стандартный расчет на расчет с учетом скидок

	//КоэффициентСкидки = 1 - ТекущиеДанные.Скидка / 100;

	Если ТекущиеДанные.Скидка + Объект.КВВ_СогласованнаяСкидка >= 100 Тогда
		КоэффициентСкидки = 0;
		Сообщить("Скидка 100%");
	Иначе
		КоэффициентСкидки = 1 - (ТекущиеДанные.Скидка + Объект.КВВ_СогласованнаяСкидка) / 100;
	КонецЕсли;

	// }} Крутилев В.В

	ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки;

КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти
